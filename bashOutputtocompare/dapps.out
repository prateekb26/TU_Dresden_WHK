name: $SESSION
digest: create

services:
   - name: application
     image_name: sconecuratedimages/iexecsgx:copy_demo
     mrenclaves: [e0f45a9a862c83f383730cc2aef144081025e3f925615da5b35c4d980faaa3c9]
     tags: [demo]
     command: /application
     pwd: /
     environment:
        SCONE_MODE: hw

volumes:
   - name: encrypted-input-files
     fspf_tag: $INPUT_FSPF_TAG
     fspf_key: $INPUT_FSPF_KEY
   - name: encrypted-output-files
     fspf_tag: $OUTPUT_FSPF_TAG
     fspf_key: $OUTPUT_FSPF_KEY

images:
   - name: sconecuratedimages/iexecsgx:copy_demo
     mrenclaves: [e0f45a9a862c83f383730cc2aef144081025e3f925615da5b35c4d980faaa3c9]
     tags: [demo]
     volumes:
        - name: encrypted-input-files
          path: /encryptedInputs
        - name: encrypted-output-files
          path: /encryptedOutputs
FROM sconecuratedimages/muslgcc

COPY copy_files.c  /

# compile with vanilla gcc
RUN gcc -Wall copy_files.c -o /copy_files

FROM iexechub/sgx-scone:runtime

COPY --from=0 /copy_files /application

RUN apk add curl bash unzip zip

ENTRYPOINT ["/application.sh"]
**MrEnclave** of the application and writes a **session template** *copy_dapp.yml*.

## Testing

We now show how to test the trusted copy DApp. After building the image
by executing


We can execute this image on a SGX-capable host. This host has to have the SCONE local attestation service and Docker installed. We describe in the [installation section](iexec_install.md) on how to install these prerequisites.

In what follows, we assume that the name of the host is stored in environment variable **host**.

### SETUP

To execute the trusted copy DApp, we need to create some files to copy.
We create an INPUTS directory and store some files there.
We also create some OUTPUTS directory and some directory to hold some generated keys (KEYS) and
to hold some temporary files (ZIP). We also copy the session template generated when building the
container image.


### Step 1

We encrypt these files and push the zipped up files for now to **filepush.co**.

Let's execute the first step of encrypting the files and pushing these to the transfer service:


Let's look at the output:


should result in an output like:


You can look in your browser at the URL to see the uploaded files!

### Step 2

Before running this application on the iExec platform, we might
want to test it on some SGX-capable host.

Ensure that the newest image is loaded on **host**. This step is only needed if it is expected that the image has changed
since **docker run** does not pull/update the image.



Let's look at the output:


this results in an output like:


You can now download this (if running a **bash** shell) 


### Step 3


We can now look at the files in OUTPUTS directory:



&copy; [scontain.com](http://www.scontain.com), November 2018. [Questions or Suggestions?](mailto:info@scontain.com)
